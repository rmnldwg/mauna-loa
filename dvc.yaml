stages:
  clean:
    cmd: >
      python scripts/clean.py 
      -i data/raw.csv 
      -o data/clean.csv
    desc: Clean the raw Mauna Loa observatory data for easier use
    deps:
      - scripts/clean.py
      - data/raw.csv
    outs:
      - data/clean.csv
      - plots/mauna_loa.png
  
  split:
    cmd: >
      python scripts/split.py
      -i data/clean.csv
      -o data
      -p params.yaml
    desc: Split the cleaned data at a `split_year` into training & testing data
    params:
      - split_year
    deps:
      - scripts/split.py
      - data/clean.csv
    outs:
      - data/train.csv
      - data/test.csv
  
  train:
    cmd: >
      python scripts/train.py
      -i data/train.csv
      -o models
    desc: Compute posterior mean & covariance for weights
    params:
      - scale
      - loc
      - noise_precision
      - prior_precision
      - season_shift
      - cycle_len
      - cycle_shift
    deps:
      - scripts/features.py
      - scripts/train.py
      - data/train.csv
    outs:
      - models/post_mean.npy
      - models/post_covmat.npy
  
  eval:
    cmd: >
      python scripts/eval.py
      --data data
      --models models
      --metrics metrics.json
    desc: Evaluate the fit using the log-evidence and root mean squared error
    params:
      - scale
      - loc
      - noise_precision
      - season_shift
      - cycle_len
      - cycle_shift
    deps:
      - scripts/features.py
      - scripts/eval.py
      - models/post_mean.npy
      - models/post_covmat.npy
    metrics:
      - metrics.json:
          cache: false
  
  plots:
    cmd: >
      python scripts/plots.py
      --data data
      --models models
      --plots plots
    desc: Generate illustrative plots
    deps:
      - data/train.csv
      - data/test.csv
      - models/post_mean.npy
      - models/post_covmat.npy
    plots:
      - plots/predictive.png:
          cache: false
